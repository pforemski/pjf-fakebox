#!/bin/bash
#
# Wrapper around toolchain
# The place where the fakebox magic takes place
#

# original tool name
ME="`basename $0`"

[[ $FB_DEBUG -ge 1 ]] && echo " [FB]  called: $ME $@" >&2

# hacks
[[ "$FB_OFF" = "1" ]] && exec "/usr/bin/$ME" "$@"
[[ "$ME" = "strip" ]] && exec "$FB_WRAP-$ME" "$@"
[[ "$ME" = "cc" ]] && ME=gcc

{ [[ "$ME" = "gcc" ]] || [[ "$ME" = "g++" ]]; } && CCACHE="$FB_CCACHE_PATH"

# prefix absolute /usr paths with $FB_TOP
for i in "$@"; do
	i="${i//I\/usr/I$FB_TOP/usr}"
	i="${i//L\/usr/L$FB_TOP/usr}"
	args[${#args[@]}]="${i// \/usr/$FB_TOP/usr}"
done

# handle special cases
if [[ -n "$FB_ROOTFS" ]]; then
	[[ "$1" = "-V" ]] || case "$ME" in
		gcc|g++|ld|cpp|cc)
			if [[ "$FB_USE_SYSROOT_OPT" = "1" ]]; then
				args[${#args[@]}]="--sysroot=$FB_ROOTFS"
			else
				args[${#args[@]}]="-I$FB_ROOTFS/usr/include"
				args[${#args[@]}]="-L$FB_ROOTFS/lib"
				args[${#args[@]}]="-L$FB_ROOTFS/usr/lib"
				FB_WRAP_ADD="$FB_WRAP_ADD_GCC_LD"
			fi
			;;
	esac
fi

# exec proper tool
[[ $FB_DEBUG -ge 2 ]] && echo " [FB]  result: $CCACHE $FB_WRAP-$ME" "${args[@]}" $FB_WRAP_ADD >&2
exec $CCACHE "$FB_WRAP-$ME" "${args[@]}" $FB_WRAP_ADD
